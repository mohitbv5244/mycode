/*@ rel_out \result <= \other \result @*/

int insertionsort(int *a, int n) {

   int i = 1;
   int j = 0;
   int C = 0;
   int t = 0;
   int comparisoncost = 2;
   int assigncost = 2;
   int pluscost = 1;
   int pluspluscost = 1;
   int minuscost = 1;
   int minusminuscost = 1;
   int andcost = 3;
   int readingcost = 2;   

   while(i < n - 1) {
      C = C + minuscost; //increment C for subtraction
      C = C + comparisoncost; //increment C for comparison
      j = i;
      while(a[j] < a[j - 1] && (j > 0)){
            C = C + readingcost; //increment C for reading from an array
            C = C + minuscost; //increment C for subtraction
            C = C + readingcost; //increment C for reading from an array
            C = C + comparisoncost; //increment C for comparison
            C = C + andcost; //increment C for AND operation
            C = C + comparisoncost; //increment C for comparison
            t = a[j];
            a[j] = a[j - 1];
            C = C + minuscost; //increment C for subtraction
            C = C + assigncost; //increment C for assigning            
            a[j - 1] = t;            
            C = C + minuscost; //increment C for subtraction
            C = C + assigncost; //increment C for assigning
            j--;
            C = C + minusminuscost; //increment C for decrement
         }
         C = C + readingcost; //increment C for reading from an array
         C = C + minuscost; //increment C for subtraction
         C = C + readingcost; //increment C for reading from an array
         C = C + comparisoncost; //increment C for comparison
         C = C + andcost; //increment C for AND operation
         C = C + comparisoncost; //increment C for exit loop
      }
      i++;
      C = C + pluspluscost; //increment C for increment
   C = C + comparisoncost; //increment C for exit loop
   return C;
}


